# Generated by Django 4.1.3 on 2022-12-04 17:01

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='ZhuGhoul', max_length=20, verbose_name='CAR NAME')),
                ('lvl', models.PositiveSmallIntegerField(default=1, verbose_name='LVL')),
                ('engine', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='ENGINE')),
                ('first', models.PositiveIntegerField(verbose_name='GEAR_1')),
                ('second', models.PositiveIntegerField(verbose_name='GEAR_2')),
                ('third', models.PositiveIntegerField(verbose_name='GEAR_3')),
                ('fouth', models.PositiveIntegerField(verbose_name='GEAR_4')),
                ('fivth', models.PositiveIntegerField(verbose_name='GEAR_5')),
                ('max_speed', models.PositiveIntegerField(verbose_name='MAX')),
                ('wheels', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='WHEELS')),
                ('turbo', models.BooleanField(verbose_name='TURBO')),
            ],
        ),
        migrations.CreateModel(
            name='Enemy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lvl', models.PositiveSmallIntegerField(verbose_name='LVL')),
                ('car', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Something.car', verbose_name='MYCAR')),
            ],
        ),
        migrations.CreateModel(
            name='Newuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(default='NoName', max_length=50, unique=True, verbose_name='username')),
                ('ghoul_lvl', models.PositiveIntegerField(default=1, verbose_name='POWER')),
                ('img', models.ImageField(default='users/zxc.jpg', upload_to='users/', verbose_name='IMG')),
                ('balance', models.PositiveIntegerField(default=100, verbose_name='BALANCE')),
                ('active', models.BooleanField(default=False, verbose_name='ACTIVE_EMAIL')),
                ('car', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Something.car', verbose_name='MYCAR')),
                ('enemy', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Something.enemy', verbose_name='ENEMY')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='ROOM')),
                ('num', models.PositiveSmallIntegerField(default=1, verbose_name='Count')),
                ('player_1', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person1', to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('player_2', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person2', to=settings.AUTH_USER_MODEL, verbose_name='user2')),
            ],
        ),
    ]
